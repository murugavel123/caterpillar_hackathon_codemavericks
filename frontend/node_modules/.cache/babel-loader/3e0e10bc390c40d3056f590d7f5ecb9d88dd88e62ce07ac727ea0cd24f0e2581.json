{"ast":null,"code":"var _jsxFileName = \"D:\\\\Caterpillar\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\OperatorTracking.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OperatingTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/adminoperator-tasks\");\n        if (!response.ok) {\n          setError(response.status === 404 ? \"✅ All tasks are completed.\" : \"❌ Server error.\");\n        } else {\n          const data = await response.json();\n          setTasks(data);\n        }\n      } catch {\n        setError(\"⚠️ Network error\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-xl shadow-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-blue-800\",\n      children: \"Operator Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), !loading && !error && tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-4 rounded shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Operator ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }, this), \" \", task.operator_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this), \" \", task.task_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 18\n          }, this), \" \", task.task_location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this), \" \", new Date(task.scheduled_start_time).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 18\n          }, this), \" \", new Date(task.scheduled_end_time).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, task.task_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(OperatingTasks, \"uSsqwMKOXc+RlmyItD0R2gEN1II=\");\n_c = OperatingTasks;\nexport default OperatingTasks;\nvar _c;\n$RefreshReg$(_c, \"OperatingTasks\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","OperatingTasks","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","status","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","operator_id","task_name","task_location","Date","scheduled_start_time","toLocaleString","scheduled_end_time","task_id","_c","$RefreshReg$"],"sources":["D:/Caterpillar/frontend/src/pages/Dashboard/OperatorTracking.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst OperatingTasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/adminoperator-tasks\");\r\n        if (!response.ok) {\r\n          setError(response.status === 404 ? \"✅ All tasks are completed.\" : \"❌ Server error.\");\r\n        } else {\r\n          const data = await response.json();\r\n          setTasks(data);\r\n        }\r\n      } catch {\r\n        setError(\"⚠️ Network error\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-xl shadow-md space-y-4\">\r\n      <h3 className=\"text-xl font-semibold text-blue-800\">Operator Task Tracker</h3>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-red-600\">{error}</p>}\r\n      {!loading && !error && tasks.length > 0 && (\r\n        <div className=\"grid gap-4\">\r\n          {tasks.map((task) => (\r\n            <div key={task.task_id} className=\"border p-4 rounded shadow-sm\">\r\n              <p><strong>Operator ID:</strong> {task.operator_id}</p>\r\n              <p><strong>Task Name:</strong> {task.task_name}</p>\r\n              <p><strong>Location:</strong> {task.task_location}</p>\r\n              <p><strong>Start:</strong> {new Date(task.scheduled_start_time).toLocaleString()}</p>\r\n              <p><strong>End:</strong> {new Date(task.scheduled_end_time).toLocaleString()}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OperatingTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}