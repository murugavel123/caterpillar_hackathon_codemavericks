{"ast":null,"code":"var _jsxFileName = \"D:\\\\Caterpillar\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\OperatorDashboard.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MachineDetailsTab from './MachineDetailsTab'; // adjust the path as needed\nimport NotificationTab from './NotificationTab';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OperatorDashboard() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const operator_id = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.operator_id;\n  const [tasks, setTasks] = useState([]);\n  const [selectedTab, setSelectedTab] = useState('Assigned Tasks');\n  const [notificationCount, setNotificationCount] = useState(0); // ðŸ‘ˆ Notification badge\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (!operator_id) return;\n    axios.get(`http://localhost:5000/api/tasks?operator_id=${operator_id}`).then(res => setTasks(res.data)).catch(err => console.error(\"Error fetching tasks:\", err));\n  }, [operator_id]);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/tasks/notifications\");\n        setNotifications(res.data);\n        setNotificationCount(res.data.length); // ðŸ‘ˆ update badge\n      } catch (err) {\n        console.error(\"Error fetching notifications:\", err);\n      }\n    };\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 5000); // refresh every 5s\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-blue-700\",\n      children: \"Operator Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4 mb-8\",\n      children: ['Assigned Tasks', 'Machine Details', 'Notifications', 'E-learning'].map((tab, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded ${selectedTab === tab ? 'bg-blue-700' : 'bg-blue-500'} text-white hover:bg-blue-600`,\n        onClick: () => setSelectedTab(tab),\n        children: tab\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedTab === 'Assigned Tasks' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Assigned Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No tasks assigned yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-xl shadow hover:shadow-lg border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-800 mb-2\",\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-700 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Task ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 26\n              }, this), \" \", task.task_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Machine ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 26\n              }, this), \" \", task.machine_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 26\n              }, this), \" \", task.task_location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 26\n              }, this), \" \", new Date(task.scheduled_start_time).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 26\n              }, this), \" \", new Date(task.scheduled_end_time).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `font-semibold mt-2 ${task.task_status ? 'text-green-600' : 'text-yellow-600'}`,\n              children: [\"Status: \", task.task_status ? 'Completed' : 'Pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, task.task_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), selectedTab === 'Machine Details' && /*#__PURE__*/_jsxDEV(MachineDetailsTab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(OperatorDashboard, \"y+g7iJoopCA6M/Onn29G7GzRYBA=\", false, function () {\n  return [useLocation];\n});\n_c = OperatorDashboard;\nvar _c;\n$RefreshReg$(_c, \"OperatorDashboard\");","map":{"version":3,"names":["useLocation","useEffect","useState","axios","MachineDetailsTab","NotificationTab","jsxDEV","_jsxDEV","Fragment","_Fragment","OperatorDashboard","_s","_location$state","location","operator_id","state","tasks","setTasks","selectedTab","setSelectedTab","notificationCount","setNotificationCount","notifications","setNotifications","get","then","res","data","catch","err","console","error","fetchNotifications","length","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","index","onClick","task","task_name","task_id","machine_id","task_location","Date","scheduled_start_time","toLocaleString","scheduled_end_time","task_status","_c","$RefreshReg$"],"sources":["D:/Caterpillar/frontend/src/pages/Dashboard/OperatorDashboard.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MachineDetailsTab from './MachineDetailsTab'; // adjust the path as needed\r\nimport NotificationTab from './NotificationTab'; \r\n\r\nexport default function OperatorDashboard() {\r\n  const location = useLocation();\r\n  const operator_id = location.state?.operator_id;\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTab, setSelectedTab] = useState('Assigned Tasks');\r\n  const [notificationCount, setNotificationCount] = useState(0); // ðŸ‘ˆ Notification badge\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!operator_id) return;\r\n    axios.get(`http://localhost:5000/api/tasks?operator_id=${operator_id}`)\r\n      .then(res => setTasks(res.data))\r\n      .catch(err => console.error(\"Error fetching tasks:\", err));\r\n  }, [operator_id]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/tasks/notifications\");\r\n        setNotifications(res.data);\r\n        setNotificationCount(res.data.length); // ðŸ‘ˆ update badge\r\n      } catch (err) {\r\n        console.error(\"Error fetching notifications:\", err);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n    const interval = setInterval(fetchNotifications, 5000); // refresh every 5s\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className=\"p-6 min-h-screen bg-gray-100\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-blue-700\">Operator Dashboard</h2>\r\n\r\n      <div className=\"flex space-x-4 mb-8\">\r\n        {['Assigned Tasks', 'Machine Details', 'Notifications', 'E-learning'].map((tab, index) => (\r\n          <button\r\n            key={index}\r\n            className={`px-4 py-2 rounded ${\r\n              selectedTab === tab ? 'bg-blue-700' : 'bg-blue-500'\r\n            } text-white hover:bg-blue-600`}\r\n            onClick={() => setSelectedTab(tab)}\r\n          >\r\n            {tab}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n\r\n        {selectedTab === 'Assigned Tasks' && (\r\n          <>\r\n            <h3 className=\"text-2xl font-semibold mb-4\">Assigned Tasks</h3>\r\n            {tasks.length === 0 ? (\r\n              <p className=\"text-gray-600\">No tasks assigned yet.</p>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {tasks.map((task) => (\r\n                  <div key={task.task_id} className=\"bg-white p-6 rounded-xl shadow hover:shadow-lg border border-gray-200\">\r\n                    <h4 className=\"text-xl font-semibold text-blue-800 mb-2\">{task.task_name}</h4>\r\n                    <div className=\"text-sm text-gray-700 space-y-1\">\r\n                      <p><strong>Task ID:</strong> {task.task_id}</p>\r\n                      <p><strong>Machine ID:</strong> {task.machine_id}</p>\r\n                      <p><strong>Location:</strong> {task.task_location}</p>\r\n                      <p><strong>Start:</strong> {new Date(task.scheduled_start_time).toLocaleString()}</p>\r\n                      <p><strong>End:</strong> {new Date(task.scheduled_end_time).toLocaleString()}</p>\r\n                      <p className={`font-semibold mt-2 ${task.task_status ? 'text-green-600' : 'text-yellow-600'}`}>\r\n                        Status: {task.task_status ? 'Completed' : 'Pending'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n\r\n      {selectedTab === 'Machine Details' && <MachineDetailsTab />}\r\n    </div>\r\n\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}