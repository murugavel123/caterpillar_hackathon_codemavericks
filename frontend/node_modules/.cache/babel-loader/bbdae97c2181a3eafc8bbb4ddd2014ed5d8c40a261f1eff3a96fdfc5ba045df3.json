{"ast":null,"code":"var _jsxFileName = \"D:\\\\Caterpillar\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\UploadProofForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadProofForm({\n  taskId\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('proof', file);\n    setUploading(true);\n    try {\n      const res = await axios.post(`http://localhost:5000/api/tasks/upload-proof/${taskId}`, formData);\n      console.log('Uploaded:', res.data);\n      setSuccess(true);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('Upload failed!');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      className: \"block w-full text-sm text-gray-700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file || uploading || success,\n      className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded\",\n      children: uploading ? 'Uploading...' : success ? 'Uploaded ✅' : 'Submit Proof'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadProofForm, \"CR97FmT6NCOgpF2iDqvVd9rAnzQ=\");\n_c = UploadProofForm;\nvar _c;\n$RefreshReg$(_c, \"UploadProofForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","UploadProofForm","taskId","_s","file","setFile","uploading","setUploading","success","setSuccess","handleUpload","formData","FormData","append","res","post","console","log","data","err","error","alert","className","children","type","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Caterpillar/frontend/src/pages/Dashboard/UploadProofForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function UploadProofForm({ taskId }) {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('proof', file);\r\n\r\n    setUploading(true);\r\n    try {\r\n      const res = await axios.post(`http://localhost:5000/api/tasks/upload-proof/${taskId}`, formData);\r\n      console.log('Uploaded:', res.data);\r\n      setSuccess(true);\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      alert('Upload failed!');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4 space-y-2\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n        className=\"block w-full text-sm text-gray-700\"\r\n      />\r\n      <button\r\n        onClick={handleUpload}\r\n        disabled={!file || uploading || success}\r\n        className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded\"\r\n      >\r\n        {uploading ? 'Uploading...' : success ? 'Uploaded ✅' : 'Submit Proof'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,IAAI,CAAC;IAE9BG,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gDAAgDb,MAAM,EAAE,EAAES,QAAQ,CAAC;MAChGK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,GAAG,CAACI,IAAI,CAAC;MAClCT,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZH,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAAC;MACpCE,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;MAC5CN,SAAS,EAAC;IAAoC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFhC,OAAA;MACEiC,OAAO,EAAEvB,YAAa;MACtBwB,QAAQ,EAAE,CAAC9B,IAAI,IAAIE,SAAS,IAAIE,OAAQ;MACxCc,SAAS,EAAC,8DAA8D;MAAAC,QAAA,EAEvEjB,SAAS,GAAG,cAAc,GAAGE,OAAO,GAAG,YAAY,GAAG;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7B,EAAA,CAxCuBF,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}