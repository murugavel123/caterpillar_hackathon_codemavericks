{"ast":null,"code":"var _jsxFileName = \"D:\\\\Caterpillar\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\TaskAssignment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAssignment = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    operator_id: \"\",\n    admin_id: \"\",\n    task_name: \"\",\n    machine_id: \"\",\n    task_location: \"\",\n    scheduled_start_time: \"\",\n    scheduled_end_time: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAssign = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/admin/tasks/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task_id: `TASK_${Date.now()}`,\n          ...formData\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(\"✅ Task assigned successfully!\");\n        setFormData({\n          operator_id: \"\",\n          admin_id: \"\",\n          task_name: \"\",\n          machine_id: \"\",\n          task_location: \"\",\n          scheduled_start_time: \"\",\n          scheduled_end_time: \"\"\n        });\n      } else {\n        alert(\"❌ Failed: \" + result.error);\n      }\n    } catch (error) {\n      alert(\"⚠️ Error while assigning task.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-xl shadow-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-blue-800\",\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"admin_id\",\n        placeholder: \"Admin ID\",\n        value: formData.admin_id,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"operator_id\",\n        placeholder: \"Operator ID\",\n        value: formData.operator_id,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"machine_id\",\n        placeholder: \"Machine ID\",\n        value: formData.machine_id,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"task_name\",\n        placeholder: \"Task Name\",\n        value: formData.task_name,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"task_location\",\n        placeholder: \"Task Location\",\n        value: formData.task_location,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"scheduled_start_time\",\n        value: formData.scheduled_start_time,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"scheduled_end_time\",\n        value: formData.scheduled_end_time,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAssign,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskAssignment, \"6srHGvdEfIPc9CcXh6ZTC/GMbTs=\");\n_c = TaskAssignment;\nexport default TaskAssignment;\nvar _c;\n$RefreshReg$(_c, \"TaskAssignment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskAssignment","_s","formData","setFormData","operator_id","admin_id","task_name","machine_id","task_location","scheduled_start_time","scheduled_end_time","handleChange","e","target","name","value","handleAssign","response","fetch","method","headers","body","JSON","stringify","task_id","Date","now","result","json","ok","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","_c","$RefreshReg$"],"sources":["D:/Caterpillar/frontend/src/pages/Dashboard/TaskAssignment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TaskAssignment = () => {\r\n  const [formData, setFormData] = useState({\r\n    operator_id: \"\",\r\n    admin_id: \"\",\r\n    task_name: \"\",\r\n    machine_id: \"\",\r\n    task_location: \"\",\r\n    scheduled_start_time: \"\",\r\n    scheduled_end_time: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAssign = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/admin/tasks/add\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ task_id: `TASK_${Date.now()}`, ...formData }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        alert(\"✅ Task assigned successfully!\");\r\n        setFormData({\r\n          operator_id: \"\",\r\n          admin_id: \"\",\r\n          task_name: \"\",\r\n          machine_id: \"\",\r\n          task_location: \"\",\r\n          scheduled_start_time: \"\",\r\n          scheduled_end_time: \"\",\r\n        });\r\n      } else {\r\n        alert(\"❌ Failed: \" + result.error);\r\n      }\r\n    } catch (error) {\r\n      alert(\"⚠️ Error while assigning task.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-xl shadow-md space-y-4\">\r\n      <h3 className=\"text-xl font-semibold text-blue-800\">Assign Task</h3>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <input name=\"admin_id\" placeholder=\"Admin ID\" value={formData.admin_id} onChange={handleChange} className=\"input\" />\r\n        <input name=\"operator_id\" placeholder=\"Operator ID\" value={formData.operator_id} onChange={handleChange} className=\"input\" />\r\n        <input name=\"machine_id\" placeholder=\"Machine ID\" value={formData.machine_id} onChange={handleChange} className=\"input\" />\r\n        <input name=\"task_name\" placeholder=\"Task Name\" value={formData.task_name} onChange={handleChange} className=\"input\" />\r\n        <input name=\"task_location\" placeholder=\"Task Location\" value={formData.task_location} onChange={handleChange} className=\"input\" />\r\n        <input type=\"datetime-local\" name=\"scheduled_start_time\" value={formData.scheduled_start_time} onChange={handleChange} className=\"input\" />\r\n        <input type=\"datetime-local\" name=\"scheduled_end_time\" value={formData.scheduled_end_time} onChange={handleChange} className=\"input\" />\r\n      </div>\r\n      <button onClick={handleAssign} className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\">\r\n        Assign Task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskAssignment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}